AWSTemplateFormatVersion: 2010-09-09
Description: >
  Creates a network
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  CidrVpc:
    Description: The CIDR for the VPC
    Type: String
  PublicSubnet1Cidr:
    Description: The CIDR for the first public subnet
    Type: String
  PublicSubnet2Cidr:
    Description: The CIDR for the second public subnet
    Type: String
  PrivateSubnet1Cidr:
    Description: The CIDR for the first private subnet
    Type: String
  PrivateSubnet2Cidr:
    Description: The CIDR for the second private subnet
    Type: String
Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref CidrVpc
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: networkVPC
  VPCInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
      - Key: Name
        Value: VpcInternetGateway
  VPCInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref VPCInternetGateway
      VpcId: !Ref MyVPC
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1Cidr
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: PublicSubnet1
      VpcId: !Ref MyVPC
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2Cidr
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: PublicSubnet2
      VpcId: !Ref MyVPC
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1Cidr
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: PrivateSubnet1
      VpcId: !Ref MyVPC
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2Cidr
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: PrivateSubnet1
      VpcId: !Ref MyVPC
  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties: 
      Domain: vpc
  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: VPCInternetGatewayAttachment
    Properties: 
      Domain: vpc
  NatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  NatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: PublicRouteTable
      VpcId: !Ref MyVPC
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref VPCInternetGateway
      RouteTableId: !Ref PublicRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: PrivateRouteTable1
      VpcId: !Ref MyVPC
  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref PrivateSubnet1RouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateSubnet1RouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: PrivateRouteTable2
      VpcId: !Ref MyVPC
  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref PrivateSubnet2RouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateSubnet2RouteTable
      SubnetId: !Ref PrivateSubnet2
Outputs:
  VPCId:
    Description: The id of the VPC
    Value: !Ref MyVPC
    Export:
      Name: !Sub '${EnvironmentName}-VPCId'
  PublicSubnet1Id:
    Description: The id of public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${EnvironmentName}-PublicSubnet1Id'
  PublicSubnet2Id:
    Description: The id of public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${EnvironmentName}-PublicSubnet2Id'
  PrivateSubnet1Id:
    Description: The id of private subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${EnvironmentName}-PrivateSubnet1Id'
  PrivateSubnet2Id:
    Description: The id of private subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${EnvironmentName}-PrivateSubnet2Id'
  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSubnets